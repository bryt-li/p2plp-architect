@startuml

component [Clients - Web and APP] as CLIENTS
component [Ops Clients - Web] as OPS_CLIENTS

component [Nginx or AWS API Gateway\nReverse Proxy] as NGINX #cyan

package "API Server Cluster or AWS Lambda" as API_SERVER_CLUSTER {
	component [Client API Server 1...N] as JACKFRUIT <<Jackfruit Cluster>>  #cyan
	component [Ops API Server 1] as MAIZE <<Maize>> #cyan
}

package "Redis Cluster or AWS DynamoDB" as REDIS_CLUSTER {
	database "Session Store" as SESSION_DB #999
	database "DB Read Cache" as CACHE_DB #999
}

component [Queue-based Workflow Job Scheduler] as DIPLOPOD <<Diplopod>>

JACKFRUIT --> DIPLOPOD

component [Transaction Gateway] as LOLLIPOP <<Lollipop>>
component [DragonPay] as DP #grey
component [RobinsonBank] as RB #grey

LOLLIPOP --> DP
LOLLIPOP --> RB

JACKFRUIT .. SESSION_DB
JACKFRUIT .. CACHE_DB
MAIZE .. SESSION_DB
MAIZE .. CACHE_DB

CLIENTS --> NGINX
OPS_CLIENTS --> NGINX

NGINX --> JACKFRUIT
NGINX --> MAIZE

component BPMN #999

package "Workflow Server Cluster" as WF_SERVER_CLUSTER {
	component [Loan Workflow Server 1...N] as VOLT <<Volt Cluster>>
}

DIPLOPOD ..> BPMN
VOLT .> BPMN
VOLT --> LOLLIPOP

database "Core DB" as DB #EEE

VOLT .> DB : write

CACHE_DB <. DB : read sync

DIPLOPOD --> VOLT

@enduml